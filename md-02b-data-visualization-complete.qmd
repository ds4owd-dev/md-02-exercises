---
title: "Data visualization with ggplot2"
format:
  html:
    embed-resources: true
editor: visual
editor_options: 
  chunk_output_type: console
---

## Import

We load the necessary packages for data visualization and the penguins dataset.

```{r}
library(ggplot2)
library(ggthemes)
library(ggridges)
library(palmerpenguins)
```

## Explore

Let's examine the structure and first few rows of the penguins dataset.

```{r}
head(penguins)
str(penguins)
```

## Visualize with ggplot2

We'll build visualizations step by step using ggplot2's grammar of graphics.

### Functions and arguments

The basic building blocks of ggplot2 are functions and their arguments.

-   functions: `ggplot()`, `aes()`, `geom_point()`
-   arguments: `data`, `mapping`, `color`

```{r}
ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g)) +
  geom_point()
```

### Aesthetic mappings

Map data variables to visual properties like position, color, and shape.

-   options: `x`, `y`, `color`, `shape`, `size`, `alpha`

```{r}
ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species,
                     shape = species)) +
  geom_point()
```

### Settings

Customize appearance with fixed values rather than data mappings.

```{r}
ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species,
                     shape = species)) +
  geom_point(size = 5, alpha = 0.7)
```

### Color scales

Modify default color palettes to improve accessibility and aesthetics.

```{r}

ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species,
                     shape = species)) +
  geom_point(size = 5, alpha = 0.7) +
  scale_color_colorblind() 

```

```{r}

ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species,
                     shape = species)) +
  geom_point(size = 5, alpha = 0.7) +
  scale_color_manual(values = c("red", "blue", "green")) 

```

### Facets

Create small multiples by splitting data into panels. Keyboard shortcut for the tilde (\~) varies by keyboard layout:

-   US keyboard Windows/Mac: Shift + \` (top left of your keyboard next to the 1)
-   UK keyboard Windows/Mac: Shift + \# (bottom right of your keyboard, next to Enter)
-   CH keyboard Windows/Max: Alt/Option + -

```{r}
ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm,
                     y = body_mass_g)) +
  geom_point() +
  facet_grid(species ~ island)
```

```{r}
ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm,
                     y = body_mass_g)) +
  geom_point() +
  facet_wrap(~species)
```

### Themes

Apply pre-built themes to change the overall look of your plots. Some code in this section is already prepared, we will add more code together.

```{r}

ggplot(data = penguins,
       mapping = aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species,
                     shape = species)) +
  geom_point(size = 5, alpha = 0.7) +
  scale_color_colorblind() +
  theme_minimal()

```

## Visualizing distributions

Explore how data is distributed across different categories and values.

### Categorical variables

Use bar charts to show counts or proportions of categorical data.

```{r}
ggplot(data = penguins,
       mapping = aes(x = species)) +
  geom_bar()
```

```{r}
ggplot(data = penguins,
       mapping = aes(x = species,
                     fill = island)) +
  geom_bar()
```

### Numerical continuous variables

Visualize the distribution of continuous data with histograms and density plots. The code in this section is already prepared, we will run through the code chunks together.

```{r}
ggplot(data = penguins,
       mapping = aes(x = body_mass_g)) +
  geom_histogram()
```

```{r}
ggplot(data = penguins,
       mapping = aes(x = body_mass_g,
                     fill = species)) +
  geom_histogram()
```

```{r}
ggplot(data = penguins,
       mapping = aes(x = body_mass_g,
                     fill = species)) +
  geom_density()
```

```{r}
ggplot(data = penguins,
       mapping = aes(x = body_mass_g,
                     y = species,
                     fill = species)) +
  geom_density_ridges()
```

## Communicate

Share your analysis by rendering this document to a standalone HTML file.

-   Render the document to html format and fix any errors
